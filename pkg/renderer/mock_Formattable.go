// Code generated by mockery v2.16.0. DO NOT EDIT.

package renderer

import mock "github.com/stretchr/testify/mock"

// MockFormattable is an autogenerated mock type for the Formattable type
type MockFormattable struct {
	mock.Mock
}

// Maps provides a mock function with given fields:
func (_m *MockFormattable) Maps() []map[string]interface{} {
	ret := _m.Called()

	var r0 []map[string]interface{}
	if rf, ok := ret.Get(0).(func() []map[string]interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]map[string]interface{})
		}
	}

	return r0
}

type mockConstructorTestingTNewMockFormattable interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFormattable creates a new instance of MockFormattable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFormattable(t mockConstructorTestingTNewMockFormattable) *MockFormattable {
	mock := &MockFormattable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
